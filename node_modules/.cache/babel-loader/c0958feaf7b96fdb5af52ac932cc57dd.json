{"ast":null,"code":"import _slicedToArray from \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\react_nav-bar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\react_nav-bar\\\\src\\\\components\\\\Header\\\\Header.js\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport \"./Header.css\";\nimport { CSSTransition } from \"react-transition-group\";\nexport default function Header() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isNavVisible = _useState2[0],\n      setNavVisibility = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSmallScreen = _useState4[0],\n      setIsSmallScreen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pubKey = _useState6[0],\n      setPubKey = _useState6[1];\n\n  useEffect(function () {\n    var mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n    return function () {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  var handleMediaQueryChange = function handleMediaQueryChange(mediaQuery) {\n    if (mediaQuery.matches) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  };\n\n  var toggleNav = function toggleNav() {\n    setNavVisibility(!isNavVisible);\n  };\n\n  var handleConnect = function handleConnect() {\n    if (typeof window !== undefined) {\n      if (window.ethereum) {\n        window.ethereum.enable().then(function () {\n          setPubKey(window.ethereum.selectedAddress.slice(0, 6));\n        });\n      }\n    }\n  };\n\n  useEffect(function () {\n    if (window.ethereum) {\n      window.ethereum.selectedAddress.slice(0, 6);\n    }\n  }, [pubKey]);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"Header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../assets/logo.png\"),\n    className: \"Logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: !isSmallScreen || isNavVisible,\n    timeout: 350,\n    classNames: \"NavAnimation\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"Nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"BUY \"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/exchange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"/ EXCHANGE\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, window.ethereum ? window.ethereum.selectedAddress ? pubKey : \"CONNECT\" : \"please install!\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleNav,\n    className: \"Burger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"\\uD83C\\uDF54\"));\n}","map":{"version":3,"sources":["E:/my working files/working/Exchange-contract/react_nav-bar/src/components/Header/Header.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Link","CSSTransition","Header","isNavVisible","setNavVisibility","isSmallScreen","setIsSmallScreen","pubKey","setPubKey","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","toggleNav","handleConnect","undefined","ethereum","enable","then","selectedAddress","slice","require"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,Link\n} from \"react-router-dom\";\n\nimport \"./Header.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\n\n\n\nexport default function Header() {\n  const [isNavVisible, setNavVisibility] = useState(false);\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n  const [pubKey, setPubKey] = useState('');\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  };\n\n  const toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  };\n\n  const handleConnect = () =>{\n    if(typeof window !==undefined){\n      if(window.ethereum){\n        window.ethereum.enable().then(()=>{\n          setPubKey(window.ethereum.selectedAddress.slice(0,6))\n        })\n      }\n    }\n  }\n\n  useEffect(()=>{\n    if(window.ethereum){\n      window.ethereum.selectedAddress.slice(0,6)\n    }\n  },[pubKey])\n\n  return (\n    <header className=\"Header\">\n      <img src={require(\"../../assets/logo.png\")} className=\"Logo\" alt=\"logo\" />\n      <CSSTransition\n        in={!isSmallScreen || isNavVisible}\n        timeout={350}\n        classNames=\"NavAnimation\"\n        unmountOnExit\n      >\n        <nav className=\"Nav\">\n            <div>\n                  <Link to=\"/\">BUY </Link>\n                  <Link to=\"/exchange\">/ EXCHANGE</Link>\n            </div>\n          <button onClick = {handleConnect}>{window.ethereum?window.ethereum.selectedAddress?pubKey:\"CONNECT\":\"please install!\"}</button>\n        </nav>\n      </CSSTransition>\n      <button onClick={toggleNav} className=\"Burger\">\n        üçî\n      </button>\n    </header>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}