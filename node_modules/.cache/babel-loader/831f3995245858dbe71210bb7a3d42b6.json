{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\Exchange\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\Exchange\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\Exchange\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\Exchange\\\\src\\\\components\\\\Header\\\\Header.js\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport \"./Header.css\";\nimport { CSSTransition } from \"react-transition-group\";\nexport default function Header() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isNavVisible = _useState2[0],\n      setNavVisibility = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSmallScreen = _useState4[0],\n      setIsSmallScreen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pubKey = _useState6[0],\n      setPubKey = _useState6[1];\n\n  useEffect(function () {\n    var mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n    return function () {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  var handleMediaQueryChange = function handleMediaQueryChange(mediaQuery) {\n    if (mediaQuery.matches) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  };\n\n  var toggleNav = function toggleNav() {\n    setNavVisibility(!isNavVisible);\n  };\n\n  useEffect(function () {\n    console.log(window.ethereum.selectedAddress);\n\n    if (window.ethereum.selectedAddress !== null) {\n      setPubKey(window.ethereum.selectedAddress);\n    }\n  });\n\n  var handleConnect = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var chainId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"connect\");\n\n              if (!(typeof window !== \"undefined\")) {\n                _context.next = 12;\n                break;\n              }\n\n              if (!window.ethereum) {\n                _context.next = 11;\n                break;\n              }\n\n              console.log(\"good\");\n              _context.next = 6;\n              return ethereum.request({\n                method: 'eth_chainId'\n              });\n\n            case 6:\n              chainId = _context.sent;\n              if (!flag && chainId == 1) window.ethereum.enable().then(function (res) {\n                setFlag(true);\n              }).catch(function (err) {\n                setFlag(false);\n              });\n\n              if (chainId != 1) {\n                alert(\"Please change network to ethereum main net\");\n              }\n\n              _context.next = 12;\n              break;\n\n            case 11:\n              alert(\"you have to install metamask!\");\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleConnect() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"Header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../assets/logo.png\"),\n    className: \"Logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: !isSmallScreen || isNavVisible,\n    timeout: 350,\n    classNames: \"NavAnimation\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"Nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"router-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"BUY\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/exchange\",\n    className: \"router-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, \"EXCHANGE\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/referral\",\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Invite Friends\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, flag ? \"`${pubKey.slice(0,6)}...`\" : \"connect\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleNav,\n    className: \"Burger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"\\uD83C\\uDF54\"));\n}","map":{"version":3,"sources":["E:/my working files/working/Exchange-contract/Exchange/src/components/Header/Header.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Link","CSSTransition","Header","isNavVisible","setNavVisibility","isSmallScreen","setIsSmallScreen","pubKey","setPubKey","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","toggleNav","console","log","ethereum","selectedAddress","handleConnect","request","method","chainId","flag","enable","then","res","setFlag","catch","err","alert","require"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,aAAa,IAAIC,MADnB,EAC0BC,IAD1B,QAEO,kBAFP;AAIA,OAAO,cAAP;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAIA,eAAe,SAASC,MAAT,GAAkB;AAAA,kBACUN,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,MACxBO,YADwB;AAAA,MACVC,gBADU;;AAAA,mBAEWR,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,MAExBS,aAFwB;AAAA,MAETC,gBAFS;;AAAA,mBAGHV,QAAQ,CAAC,EAAD,CAHL;AAAA;AAAA,MAGxBW,MAHwB;AAAA,MAGhBC,SAHgB;;AAK/BX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkB,oBAAlB,CAAnB;AACAF,IAAAA,UAAU,CAACG,WAAX,CAAuBC,sBAAvB;AACAA,IAAAA,sBAAsB,CAACJ,UAAD,CAAtB;AAEA,WAAO,YAAM;AACXA,MAAAA,UAAU,CAACK,cAAX,CAA0BD,sBAA1B;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;;AAUA,MAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAJ,UAAU,EAAI;AAC3C,QAAIA,UAAU,CAACM,OAAf,EAAwB;AACtBT,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAND;;AAQA,MAAMU,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBZ,IAAAA,gBAAgB,CAAC,CAACD,YAAF,CAAhB;AACD,GAFD;;AAIAN,EAAAA,SAAS,CAAC,YAAI;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACS,QAAP,CAAgBC,eAA5B;;AACA,QAAGV,MAAM,CAACS,QAAP,CAAgBC,eAAhB,KAAkC,IAArC,EAA0C;AACxCZ,MAAAA,SAAS,CAACE,MAAM,CAACS,QAAP,CAAgBC,eAAjB,CAAT;AACD;AACF,GALQ,CAAT;;AAOA,MAAMC,aAAa;AAAA,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBJ,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AADmB,oBAEhB,OAAOR,MAAP,KAAkB,WAFF;AAAA;AAAA;AAAA;;AAAA,mBAGXA,MAAM,CAACS,QAHI;AAAA;AAAA;AAAA;;AAIXF,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAJW;AAAA,qBAKWC,QAAQ,CAACG,OAAT,CAAiB;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAjB,CALX;;AAAA;AAKLC,cAAAA,OALK;AAMX,kBAAG,CAACC,IAAD,IAAOD,OAAO,IAAE,CAAnB,EACId,MAAM,CAACS,QAAP,CAAgBO,MAAhB,GAAyBC,IAAzB,CAA8B,UAACC,GAAD,EAAQ;AAClCC,gBAAAA,OAAO,CAAC,IAAD,CAAP;AACH,eAFD,EAEGC,KAFH,CAES,UAACC,GAAD,EAAQ;AACbF,gBAAAA,OAAO,CAAC,KAAD,CAAP;AACH,eAJD;;AAKJ,kBAAGL,OAAO,IAAE,CAAZ,EAAc;AACVQ,gBAAAA,KAAK,CAAC,4CAAD,CAAL;AACH;;AAdU;AAAA;;AAAA;AAiBXA,cAAAA,KAAK,CAAC,+BAAD,CAAL;;AAjBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA,oBAAbX,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAqBA,sBACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa;AAAK,IAAA,GAAG,EAAEY,OAAO,CAAC,uBAAD,CAAjB;AAA4C,IAAA,SAAS,EAAC,MAAtD;AAA6D,IAAA,GAAG,EAAC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,CADF,eAEE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAE,CAAC5B,aAAD,IAAkBF,YADxB;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,cAHb;AAIE,IAAA,aAAa,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADN,eAEM,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFN,eAGM,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHN,CADJ,eAME;AAAQ,IAAA,OAAO,EAAIkB,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCI,IAAI,GAAC,2BAAD,GAA6B,SAApE,CANF,CANF,CAFF,eAiBE;AAAQ,IAAA,OAAO,EAAET,SAAjB;AAA4B,IAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,CADF;AAuBD","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,Link\n} from \"react-router-dom\";\n\nimport \"./Header.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\n\n\nexport default function Header() {\n  const [isNavVisible, setNavVisibility] = useState(false);\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n  const [pubKey, setPubKey] = useState('');\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  };\n\n  const toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  };\n\n  useEffect(()=>{\n    console.log(window.ethereum.selectedAddress)\n    if(window.ethereum.selectedAddress!==null){\n      setPubKey(window.ethereum.selectedAddress)\n    }\n  })\n\n  const handleConnect =async () =>{\n    console.log(\"connect\");\n    if(typeof window !== \"undefined\"){\n        if (window.ethereum) {\n            console.log(\"good\");\n            const chainId = await ethereum.request({ method: 'eth_chainId' });\n            if(!flag&&chainId==1)\n                window.ethereum.enable().then((res)=> {\n                    setFlag(true);\n                }).catch((err)=> {\n                    setFlag(false);\n                })\n            if(chainId!=1){\n                alert(\"Please change network to ethereum main net\")\n            }\n            }\n        else{\n            alert(\"you have to install metamask!\")\n        }\n    }\n}\n  return (\n    <header className=\"Header\">\n      <Link to=\"/\"><img src={require(\"../../assets/logo.png\")} className=\"Logo\" alt=\"logo\" /></Link>\n      <CSSTransition\n        in={!isSmallScreen || isNavVisible}\n        timeout={350}\n        classNames=\"NavAnimation\"\n        unmountOnExit\n      >\n        <nav className=\"Nav\">\n            <div>\n                  <Link to=\"/\" className=\"router-link\">BUY</Link>\n                  <Link to=\"/exchange\" className=\"router-link\">EXCHANGE</Link>\n                  <Link to=\"/referral\" className=\"test\">Invite Friends</Link>\n            </div>\n          <button onClick = {handleConnect}>{flag?\"`${pubKey.slice(0,6)}...`\":\"connect\"}</button>\n        </nav>\n      </CSSTransition>\n      <button onClick={toggleNav} className=\"Burger\">\n        🍔\n      </button>\n    </header>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}