{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\react_nav-bar\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\react_nav-bar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\react_nav-bar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\my working files\\\\working\\\\Exchange-contract\\\\react_nav-bar\\\\src\\\\components\\\\Header\\\\Header.js\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport \"./Header.css\";\nimport { CSSTransition } from \"react-transition-group\";\nvar textWrapper = document.querySelector('.ml3');\ntextWrapper.innerHTML = textWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\nanime.timeline({\n  loop: true\n}).add({\n  targets: '.ml3 .letter',\n  opacity: [0, 1],\n  easing: \"easeInOutQuad\",\n  duration: 2250,\n  delay: function delay(el, i) {\n    return 150 * (i + 1);\n  }\n}).add({\n  targets: '.ml3',\n  opacity: 0,\n  duration: 1000,\n  easing: \"easeOutExpo\",\n  delay: 1000\n});\nexport default function Header() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isNavVisible = _useState2[0],\n      setNavVisibility = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSmallScreen = _useState4[0],\n      setIsSmallScreen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pubKey = _useState6[0],\n      setPubKey = _useState6[1];\n\n  useEffect(function () {\n    var mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n    return function () {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  var handleMediaQueryChange = function handleMediaQueryChange(mediaQuery) {\n    if (mediaQuery.matches) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  };\n\n  var toggleNav = function toggleNav() {\n    setNavVisibility(!isNavVisible);\n  };\n\n  useEffect(function () {\n    console.log(window.ethereum.selectedAddress);\n\n    if (window.ethereum.selectedAddress !== null) {\n      setPubKey(window.ethereum.selectedAddress);\n    }\n  });\n\n  var handleConnect = function handleConnect(e) {\n    e.preventDefault();\n\n    if (typeof window !== \"undefined\") {\n      try {\n        window.ethereum.enable().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setPubKey(window.ethereum.selectedAddress);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })));\n      } catch (e) {\n        alert(\"please install metamask!\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"Header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../assets/logo.png\"),\n    className: \"Logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: !isSmallScreen || isNavVisible,\n    timeout: 350,\n    classNames: \"NavAnimation\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"Nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, \"BUY\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/exchange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, \"EXCHANGE\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/referral\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, \"Invite Friends\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, window.ethereum ? window.ethereum.selectedAddress !== null ? \"\".concat(pubKey.slice(0, 6), \"...\") : \"CONNECT\" : \"please install!\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleNav,\n    className: \"Burger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"\\uD83C\\uDF54\"));\n}","map":{"version":3,"sources":["E:/my working files/working/Exchange-contract/react_nav-bar/src/components/Header/Header.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Link","CSSTransition","textWrapper","document","querySelector","innerHTML","textContent","replace","anime","timeline","loop","add","targets","opacity","easing","duration","delay","el","i","Header","isNavVisible","setNavVisibility","isSmallScreen","setIsSmallScreen","pubKey","setPubKey","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","toggleNav","console","log","ethereum","selectedAddress","handleConnect","e","preventDefault","enable","then","alert","require","color","slice"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,Link\n} from \"react-router-dom\";\n\nimport \"./Header.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\n\n\nvar textWrapper = document.querySelector('.ml3');\ntextWrapper.innerHTML = textWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\n\nanime.timeline({loop: true})\n  .add({\n    targets: '.ml3 .letter',\n    opacity: [0,1],\n    easing: \"easeInOutQuad\",\n    duration: 2250,\n    delay: (el, i) => 150 * (i+1)\n  }).add({\n    targets: '.ml3',\n    opacity: 0,\n    duration: 1000,\n    easing: \"easeOutExpo\",\n    delay: 1000\n  });\nexport default function Header() {\n  const [isNavVisible, setNavVisibility] = useState(false);\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n  const [pubKey, setPubKey] = useState('');\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  };\n\n  const toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  };\n\n  useEffect(()=>{\n    console.log(window.ethereum.selectedAddress)\n    if(window.ethereum.selectedAddress!==null){\n      setPubKey(window.ethereum.selectedAddress)\n    }\n  })\n\n  const handleConnect = (e) =>{\n    e.preventDefault();\n    if (typeof window !== \"undefined\") {\n        try {\n          window.ethereum.enable().then(async()=> {\n            setPubKey(window.ethereum.selectedAddress)\n          })\n        }\n        catch(e){\n            alert(\"please install metamask!\");\n        }\n  }\n}\n\n  return (\n    <header className=\"Header\">\n      <Link to=\"/\"><img src={require(\"../../assets/logo.png\")} className=\"Logo\" alt=\"logo\" /></Link>\n      <CSSTransition\n        in={!isSmallScreen || isNavVisible}\n        timeout={350}\n        classNames=\"NavAnimation\"\n        unmountOnExit\n      >\n        <nav className=\"Nav\">\n            <div>\n                  <Link to=\"/\">BUY</Link>\n                  <Link to=\"/exchange\">EXCHANGE</Link>\n                  <Link to=\"/referral\" style={{color:\"red\"}}>Invite Friends</Link>\n            </div>\n          <button onClick = {handleConnect}>{window.ethereum?window.ethereum.selectedAddress!==null?`${pubKey.slice(0,6)}...`:\"CONNECT\":\"please install!\"}</button>\n        </nav>\n      </CSSTransition>\n      <button onClick={toggleNav} className=\"Burger\">\n        🍔\n      </button>\n    </header>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}